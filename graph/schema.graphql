# Off-chain post metadata for the post, per chain
type Post @entity(immutable: true) {
	id: Bytes! # contract address + contract post index(dynamic)
	parentId: Bytes! # post id(dynamic)
	index: BigInt! # for querying
	author: Bytes! # address
	contents: [PostContent!]!
	blockTimestamp: BigInt!
	tip: Tip
	offer: Offer
}

# Off-chain content metadata for the post, per chain
type PostContent @entity(immutable: true) {
	id: Bytes! # content index(u8) + chain post index (dynamic)
	type: Bytes!
	value: Bytes!
}

# For counting post index per chain, used for ordering the query
type ChainPostIndexCounter @entity {
	id: Bytes! # empty bytes
	count: BigInt!
}

# Used counting the replies of a post, per chain
type PostReplyCounter @entity {
	id: Bytes! # post id(dynamic)
	count: BigInt!
}

# Used for finding the top posts of last 24+(0 to 4) hour, per chain
type PostReplyCounter_FourHourTimeframe @entity {
	id: Bytes! # timeframe(timestamp(second) / (60 * 60 * 4))(u64) + post id(dynamic)
	count: BigInt!
}

# Tip metadata for the post
type Tip @entity(immutable: true) {
	id: Bytes! # post id(dynamic)
	to: Bytes! # address
	value: BigInt!
}

# Offer metadata for the post
type Offer @entity(immutable: true) {
	id: Bytes! # post id(dynamic)
	from: Bytes! # address
	value: BigInt!
}
